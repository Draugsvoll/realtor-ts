// Generated by https://quicktype.io


export interface PropertyType {
	property_id:          string;
	listing_id:           string;
	products:             LeadType[];
	rdc_web_url:          string;
	prop_type:            PropType;
	address:              Address;
	branding:             Branding;
	prop_status:          Status;
	price:                number;
	baths_full:           number;
	baths:                number;
	beds:                 number;
	agents:               Agent[];
	office:               Office;
	last_update:          string;
	client_display_flags: ClientDisplayFlags;
	lead_forms:           LeadForms;
	photo_count:          number;
	thumbnail?:           string;
	page_no:              number;
	rank:                 number;
	list_tracking:        string;
	lot_size?:            Size;
	mls:                  Mls;
	data_source_name:     DataSourceName;
	building_size?:       Size;
	prop_sub_type?:       PropSubType;
	baths_half?:          number;
	virtual_tour?:        VirtualTour;
}

export interface Address {
	city:                   string;
	line:                   string;
	postal_code:            string;
	state_code:             StateCode;
	state:                  State;
	county:                 string;
	fips_code:              null | string;
	county_needed_for_uniq: boolean;
	lat:                    number;
	lon:                    number;
	neighborhood_name?:     string;
	is_approximate?:        boolean;
	time_zone?:             string;
}

export enum State {
	NewYork = "New York",
}

export enum StateCode {
	Ny = "NY",
}

export interface Agent {
	primary:        boolean;
	advertiser_id?: string;
	id?:            string;
	photo:          VirtualTour | null;
	name:           string;
}

export interface VirtualTour {
	href: string;
}

export interface Branding {
	listing_office: ListingOffice;
}

export interface ListingOffice {
	list_item: ListItem;
}

export interface ListItem {
	name:              string;
	photo:             null;
	phone:             null;
	slogan:            null;
	show_realtor_logo: boolean;
	link:              null;
	accent_color:      null;
}

export interface Size {
	size:  number;
	units: Units;
}

export enum Units {
	Sqft = "sqft",
}

export interface ClientDisplayFlags {
	presentation_status:                Status;
	is_showcase:                        boolean;
	lead_form_phone_required:           boolean;
	price_change:                       number;
	is_co_broke_email:                  boolean;
	has_open_house:                     boolean;
	is_co_broke_phone:                  boolean;
	is_new_listing:                     boolean;
	is_new_plan:                        boolean;
	is_turbo:                           boolean;
	is_office_standard_listing:         boolean;
	suppress_map_pin:                   boolean;
	show_contact_a_lender_in_lead_form: boolean;
	show_veterans_united_in_lead_form:  boolean;
	flip_the_market_enabled?:           boolean;
	is_showcase_choice_enabled:         boolean;
	is_new_construction?:               boolean;
	is_pending?:                        boolean;
}

export enum Status {
	ForSale = "for_sale",
}

export enum DataSourceName {
	Mls = "mls",
}

export interface LeadForms {
	form:                    Form;
	show_agent:              boolean;
	show_broker:             boolean;
	show_builder:            boolean;
	show_contact_a_lender:   boolean;
	show_veterans_united:    boolean;
	form_type:               FormType;
	lead_type:               LeadType;
	is_lcm_enabled:          boolean;
	flip_the_market_enabled: boolean;
	local_phone?:            LocalPhone;
	local_phones?:           LocalPhones;
	show_text_leads:         boolean;
	cashback_enabled:        boolean;
	smarthome_enabled:       boolean;
}

export interface Form {
	name:    Email;
	email:   Email;
	phone:   Phone;
	message: Email;
	show:    boolean;
}

export interface Email {
	required:                boolean;
	minimum_character_count: number;
}

export interface Phone {
	required:                boolean;
	minimum_character_count: number;
	maximum_character_count: number;
}

export enum FormType {
	Classic = "classic",
}

export enum LeadType {
	CoBroke = "co_broke",
	CoreAgent = "core.agent",
	CoreBroker = "core.broker",
}

export enum LocalPhone {
	The8886520969 = "(888)652-0969",
	The8888600947 = "(888)860-0947",
	The9294934835 = "(929)493-4835",
}

export interface LocalPhones {
	comm_console_mweb: LocalPhone;
}

export interface Mls {
	name:         string;
	id:           string;
	plan_id:      null;
	abbreviation: string;
	type:         DataSourceName;
}

export interface Office {
	id:   string;
	name: string;
}

export enum PropSubType {
	Condos = "condos",
	Coop = "coop",
	Townhomes = "townhomes",
}

export enum PropType {
	Condo = "condo",
	SingleFamily = "single_family",
}
